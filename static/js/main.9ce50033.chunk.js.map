{"version":3,"sources":["components/youtube.tsx","components/stats.tsx","components/search.tsx","boxers.tsx","data.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Youtube","props","useState","play","show","setPlay","ytPlayerState","setYtPlayerState","setTimeout","opts","playerVars","autoplay","end","start","ytStates","YouTube","PlayerState","Button","variant","color","onClick","PLAYING","UNSTARTED","ENDED","PAUSED","CUED","BUFFERING","Box","component","display","videoId","source","id","onStateChange","e","data","Stats","popularYears","results","songs","map","i","year","reduce","prev","curr","Object","entries","sort","a","b","popularBoxers","boxer","name","Lyrics","styled","div","GithubLink","span","TwitterLink","Search","locationPathName","locationPathNameSplit","split","length","getLocationSearch","useLocation","pathname","locationSearchValue","locationSearchType","history","useHistory","searchResults","setSearchResults","search","setSearch","searchType","setSearchType","useEffect","value","includes","songParam","val","songParamWithNoAccents","normalize","replace","toLowerCase","filter","song","artist","singer","lyrics","parseInt","SearchSongs","document","title","getBoxRecLink","getBoxStatLink","className","noValidate","autoComplete","mr","TextField","label","spellCheck","onChange","push","target","FormControl","InputLabel","Select","native","Link","rel","href","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","metadata","genius","boxrecId","boxstatId","boxers","Map","set","get","genre","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9ce50033.chunk.js","sourcesContent":["import {useState} from \"react\";\r\nimport {Box, Button} from \"@material-ui/core\";\r\nimport YouTube, {Options} from 'react-youtube';\r\nimport PlayArrow from '@material-ui/icons/PlayArrow';\r\nimport Pause from '@material-ui/icons/Pause';\r\n\r\nfunction Youtube(props: { id: string, source: string, start: number, end: number }) {\r\n    const [play, setPlay] = useState({play: false, show: false});\r\n    const [ytPlayerState, setYtPlayerState] = useState<number>(-1);\r\n    const setToPlay = () => setPlay({play: true, show: false});\r\n    // clicking play sets `show` to false, which then\r\n    // sets a timeout to set it again to true\r\n    // it unrenders and rerenders the iframe element\r\n    if (play.play && !play.show) {\r\n        setTimeout(() => setPlay({play: true, show: true}), 0);\r\n    }\r\n\r\n    const opts = {\r\n        playerVars: {\r\n            autoplay: 1,\r\n            end: props.end,\r\n            start: props.start,\r\n        }\r\n    } as Options;\r\n\r\n    function stateChange(e: { target: any; data: number }) {\r\n        setYtPlayerState(e.data);\r\n    }\r\n\r\n    const ytStates = YouTube.PlayerState;\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={setToPlay}>\r\n                {ytPlayerState === ytStates.PLAYING && <Pause/>}\r\n                {(ytPlayerState === ytStates.UNSTARTED || ytPlayerState === ytStates.ENDED || ytPlayerState === ytStates.PAUSED) &&\r\n                <PlayArrow/>}\r\n                {(ytPlayerState === ytStates.CUED || ytPlayerState === ytStates.BUFFERING) &&\r\n                <span>LOADING</span>}\r\n            </Button>\r\n\r\n            {play.play && play.show &&\r\n            <Box component=\"div\" display=\"none\">\r\n                <YouTube\r\n                    videoId={props.source}\r\n                    id={props.id}\r\n                    opts={opts}\r\n                    onStateChange={stateChange}\r\n                />\r\n            </Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Youtube;\r\n","import {song} from '../data';\r\n\r\nfunction Stats(props: { songs: song[] }) {\r\n\r\n    const popularYears = (): any[] => {\r\n        const results = props.songs.map(i => i.year)\r\n            // eslint-disable-next-line no-sequences\r\n            .reduce((prev: any, curr: any) => (prev[curr] = ++prev[curr] || 1, prev), {});\r\n\r\n        return Object.entries(results).sort((a: [string, any], b: [string, any]) => {\r\n            if (a[1] < b[1]) {\r\n                return 1;\r\n            }\r\n\r\n            if (a[1] > b[1]) {\r\n                return -1\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    const popularBoxers = (): any[] => {\r\n        const results = props.songs.map(i => i.boxer?.name)\r\n            // eslint-disable-next-line no-sequences\r\n            .reduce((prev: any, curr: any) => (prev[curr] = ++prev[curr] || 1, prev), {});\r\n\r\n        return Object.entries(results).sort((a: [string, any], b: [string, any]) => {\r\n            if (a[1] < b[1]) {\r\n                return 1;\r\n            }\r\n\r\n            if (a[1] > b[1]) {\r\n                return -1\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>Top referenced years: {popularYears()[0][0]}, {popularYears()[1][0]}, {popularYears()[2][0]}</div>\r\n            <div>Top referenced boxers: {popularBoxers()[0][0]}, {popularBoxers()[1][0]}, {popularBoxers()[2][0]}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Stats;\r\n","import {\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Link,\r\n    Select,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {ChangeEvent, useEffect, useState} from \"react\";\r\nimport Youtube from \"./youtube\";\r\nimport {song} from \"../data\";\r\nimport styled from 'styled-components';\r\nimport GitHub from '@material-ui/icons/GitHub';\r\nimport Twitter from '@material-ui/icons/Twitter';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport Stats from \"./stats\";\r\n\r\nconst Lyrics = styled.div`\r\n    white-space: pre-wrap;\r\n    font-style: italic;\r\n \r\n    &::before, &&::after {\r\n        content: '\"';\r\n    }\r\n`;\r\n\r\nconst GithubLink = styled.span`\r\n    position: relative;\r\n    margin: 0 10px;\r\n    top: 10px;\r\n    svg {\r\n        color: black;    \r\n    }\r\n`;\r\n\r\nconst TwitterLink = styled.span`\r\n    position: relative;\r\n    margin: 0 10px;\r\n    top: 10px;\r\n    svg {\r\n        color: rgba(29,161,242,1.00);\r\n    }\r\n`\r\n\r\ntype SearchType = \"all\" | \"artist\" | \"song\" | \"lyrics\" | \"boxer\";\r\n\r\nfunction SearchSongs(songs: song[], value: string, searchType: SearchType): song[] {\r\n    if (value === '') {\r\n        return songs;\r\n    }\r\n\r\n    const includes = (songParam: string = '', val: string): boolean => {\r\n        // takes the song value and removes all accents for additional searching\r\n        const songParamWithNoAccents = songParam.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n        return songParam.toLowerCase().includes(val) || songParamWithNoAccents.toLowerCase().includes(val);\r\n    }\r\n\r\n    return songs.filter(song => {\r\n        const val: string = value.toLowerCase();\r\n\r\n        if (\r\n            (searchType === \"artist\" && (includes(song.artist, val) || includes(song.singer, val)))\r\n            || (searchType === \"song\" && includes(song.song, val))\r\n            || (searchType === \"lyrics\" && includes(song.lyrics, val))\r\n            || (searchType === \"boxer\" && includes(song.boxer?.name, val))\r\n        ) {\r\n            return true;\r\n        } else if (searchType === \"all\") {\r\n            if (includes(song.boxer?.name, val)) {\r\n                return true;\r\n            }\r\n\r\n            if (includes(song.artist, val) || includes(song.singer, val)) {\r\n                return true;\r\n            }\r\n\r\n            if (song.year === parseInt(val)) {\r\n                return true;\r\n            }\r\n\r\n            if (includes(song.song, val)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    });\r\n}\r\n\r\nfunction getLocationSearch(locationPathName: string): string[] {\r\n    const locationPathNameSplit = locationPathName.split('/');\r\n\r\n    if (locationPathNameSplit.length === 3) {\r\n        // basic search without type\r\n        return [locationPathNameSplit[locationPathNameSplit.length - 1], \"all\"];\r\n    } else if (locationPathNameSplit.length === 4) {\r\n        // search with type\r\n        return [locationPathNameSplit[locationPathNameSplit.length - 2], locationPathNameSplit[locationPathNameSplit.length - 1] ?? \"all\"];\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nfunction Search(props: { songs: song[] }) {\r\n    const location = useLocation();\r\n    const [locationSearchValue, locationSearchType] = getLocationSearch(location.pathname);\r\n    const history = useHistory();\r\n\r\n    const [searchResults, setSearchResults] = useState<song[]>([]);\r\n    const [search, setSearch] = useState<string>(\"\");\r\n    const [searchType, setSearchType] = useState<SearchType>(\"all\");\r\n\r\n    if (locationSearchValue && search !== locationSearchValue) {\r\n        setSearch(locationSearchValue);\r\n    }\r\n\r\n    const inputChange =\r\n        (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n            history.push(`/boxing-references/${e.target.value}/${locationSearchType}`);\r\n            setSearch(e.target.value);\r\n        }\r\n\r\n    const handleChange = (e: ChangeEvent<{ name?: string | undefined; value: unknown; }>) => {\r\n        history.push(`/boxing-references/${locationSearchValue}/${e.target.value}`);\r\n        setSearchType(e.target.value as SearchType);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSearchResults(SearchSongs(props.songs, search, searchType));\r\n    }, [search, searchType, props.songs])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            document.title = `Boxing references in media`;\r\n        } else {\r\n            document.title = `Boxing references for \"${search}\"`;\r\n        }\r\n    }, [search]);\r\n\r\n    const getBoxRecLink = (id: string = '0') => `https://boxrec.com/en/proboxer/${id}`;\r\n    const getBoxStatLink = (id: string = '0') => `https://boxstat.co/boxer/${id}`;\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <form noValidate autoComplete=\"off\">\r\n                <Box mr={1} display=\"inline\">\r\n                    <TextField id=\"standard-basic\" label=\"Search\" spellCheck=\"false\" value={search}\r\n                               onChange={inputChange}/>\r\n                </Box>\r\n                <Box display=\"inline\">\r\n                    <FormControl>\r\n                        <InputLabel>Type</InputLabel>\r\n                        <Select\r\n                            native\r\n                            onChange={handleChange}\r\n                        >\r\n                            <option value=\"all\">All</option>\r\n                            <option value=\"artist\">Artist/Singer/Rapper</option>\r\n                            <option value=\"song\">Song</option>\r\n                            <option value=\"year\">Year</option>\r\n                            <option value=\"lyrics\">Lyrics</option>\r\n                            <option value=\"boxer\">Boxer</option>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <GithubLink>\r\n                        <Link target=\"_blank\" rel=\"noopener\" href=\"https://github.com/boxing/boxing-references\">\r\n                            <GitHub/>\r\n                        </Link>\r\n                    </GithubLink>\r\n\r\n                    <TwitterLink>\r\n                        <Link target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/Mike_DiDomizio\">\r\n                            <Twitter/>\r\n                        </Link>\r\n                    </TwitterLink>\r\n                </Box>\r\n            </form>\r\n\r\n            <div>{searchResults.length} result{searchResults.length !== 1 && <span>s</span>}</div>\r\n\r\n            <Stats songs={props.songs}/>\r\n\r\n            {searchResults.length > 0 &&\r\n            <TableContainer>\r\n                <Table aria-label=\"Boxing references\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Artist</TableCell>\r\n                            <TableCell>Song</TableCell>\r\n                            <TableCell>Singer/Rapper</TableCell>\r\n                            <TableCell>Year</TableCell>\r\n                            <TableCell>Boxer</TableCell>\r\n                            <TableCell>Links</TableCell>\r\n                            <TableCell>Lyrics</TableCell>\r\n                            <TableCell/>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {searchResults.map((song, i) =>\r\n                            <TableRow key={i}>\r\n                                <TableCell>{song.artist}</TableCell>\r\n                                <TableCell>\r\n                                    <Link target=\"_blank\" href={song.metadata.genius}>\r\n                                        {song.song}\r\n                                    </Link></TableCell>\r\n                                <TableCell>{song.singer}</TableCell>\r\n                                <TableCell>{song.year}</TableCell>\r\n                                <TableCell>{song.boxer?.name}\r\n                                    &nbsp;- <Link target=\"_blank\" href={getBoxRecLink(song.boxer?.boxrecId)}>\r\n                                        BoxRec\r\n                                    </Link>\r\n                                    /<Link target=\"_blank\" href={getBoxStatLink(song.boxer?.boxstatId)}>\r\n                                        BoxStat\r\n                                    </Link>\r\n                                </TableCell>\r\n                                <TableCell><Lyrics>{song.lyrics}</Lyrics></TableCell>\r\n                                <TableCell>\r\n                                    <Youtube id={song.metadata.song.id} source={song.metadata.song.id}\r\n                                             start={song.metadata.song.start}\r\n                                             end={song.metadata.song.end}/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","export interface Boxer {\r\n    name: string;\r\n    boxrecId: string;\r\n    boxstatId: string;\r\n}\r\n\r\nexport const boxers = new Map<string, Boxer>();\r\n\r\nboxers.set('Sonny Liston', {\r\n    name: 'Sonny Liston',\r\n    boxrecId: '9031',\r\n    boxstatId: '69408-sonny-liston',\r\n});\r\n\r\nboxers.set('Mike Tyson', {\r\n    name: 'Mike Tyson',\r\n    boxrecId: '474',\r\n    boxstatId: '18274-mike-tyson',\r\n});\r\n\r\nboxers.set('Pernell Whitaker', {\r\n    name: 'Pernell Whitaker',\r\n    boxrecId: '555',\r\n    boxstatId: '69652-pernell-whitaker',\r\n});\r\n\r\nboxers.set('Julio César Chávez', {\r\n    name: 'Julio César Chávez',\r\n    boxrecId: '8119',\r\n    boxstatId: '13727-julio-cesar-chavez',\r\n});\r\n\r\nboxers.set('Roberto Duran', {\r\n    name: 'Roberto Duran',\r\n    boxrecId: '80',\r\n    boxstatId: '11759-roberto-duran',\r\n});\r\n","import {Boxer, boxers} from './boxers';\r\n\r\nexport interface song {\r\n    song: string;\r\n    year: number;\r\n    artist: string;\r\n    singer: string;\r\n    lyrics: string;\r\n    boxer: Boxer | undefined;\r\n    genre: Genre;\r\n    metadata: {\r\n        song: youtubeVideo;\r\n        genius: string;\r\n    }\r\n}\r\n\r\nexport interface youtubeVideo {\r\n    source: \"youtube\";\r\n    id: string;\r\n    start: number;\r\n    end: number;\r\n}\r\n\r\ntype Genre = \"rap\"\r\n\r\nexport const data: song[] = [\r\n    {\r\n        song: \"Surf Swag\",\r\n        year: 2009,\r\n        singer: \"Lil Wayne\",\r\n        artist: \"Lil Wayne\",\r\n        lyrics: \"Weezy beat the beat up like Sonny Liston\\nRedbone do me good then her friend assist her\",\r\n        boxer: boxers.get('Sonny Liston'),\r\n        genre: \"rap\",\r\n        metadata: {\r\n            song: {\r\n                source: \"youtube\",\r\n                id: 'eRRKlXbIqHY',\r\n                start: 187,\r\n                end: 194,\r\n            },\r\n            genius: 'https://genius.com/13380',\r\n        }\r\n    },\r\n    {\r\n        song: \"Bitch Please\",\r\n        year: 1999,\r\n        artist: \"Snoop Dogg\",\r\n        singer: 'Xzibit',\r\n        lyrics: \"Xzibit ready to Scrap like Mike Tyson with his license back\\n9 to 5 minimum wage? What type of life is that?\",\r\n        boxer: boxers.get('Mike Tyson'),\r\n        genre: \"rap\",\r\n        metadata: {\r\n            song: {\r\n                source: \"youtube\",\r\n                id: 'y6_cpFMRVQM',\r\n                start: 42,\r\n                end: 50,\r\n            },\r\n            genius: 'https://genius.com/21430388',\r\n        }\r\n    },\r\n    {\r\n        song: \"Young Man Rumble\",\r\n        year: 1994,\r\n        artist: \"Max and Sam\",\r\n        singer: \"Max Kellerman\",\r\n        lyrics: \"Got skills, got stamina\\nGot hands of stone like the champ from Panama\",\r\n        boxer: boxers.get('Roberto Duran'),\r\n        genre: \"rap\",\r\n        metadata: {\r\n            song: {\r\n                source: \"youtube\",\r\n                id: \"WF0DntqwMKg\",\r\n                start: 77,\r\n                end: 82,\r\n            },\r\n            genius: \"https://genius.com/16338821\",\r\n        }\r\n    },\r\n    {\r\n        song: \"Young Man Rumble\",\r\n        year: 1994,\r\n        artist: \"Max and Sam\",\r\n        singer: \"Max Kellerman\",\r\n        lyrics: \"New York, New York, so nice, got named twice, and...\\nI'm harassing' punks like Mike Tyson\",\r\n        boxer: boxers.get('Mike Tyson'),\r\n        genre: \"rap\",\r\n        metadata: {\r\n            song: {\r\n                source: \"youtube\",\r\n                id: \"WF0DntqwMKg\",\r\n                start: 102,\r\n                end: 107,\r\n            },\r\n            genius: \"https://genius.com/Max-and-sam-young-man-rumble-lyrics\",\r\n        }\r\n    },\r\n    {\r\n        song: \"Young Man Rumble\",\r\n        year: 1994,\r\n        artist: \"Max and Sam\",\r\n        singer: \"Max Kellerman\",\r\n        lyrics: \"And I’ll break, connive, it's worse\\nThan Pernell Whitaker fuckin' up Chavez\",\r\n        boxer: boxers.get('Pernell Whitaker'),\r\n        genre: \"rap\",\r\n        metadata: {\r\n            song: {\r\n                source: \"youtube\",\r\n                id: \"WF0DntqwMKg\",\r\n                start: 107,\r\n                end: 112,\r\n            },\r\n            genius: \"https://genius.com/16338821\",\r\n        }\r\n    },\r\n    {\r\n        song: \"Young Man Rumble\",\r\n        year: 1994,\r\n        artist: \"Max and Sam\",\r\n        singer: \"Max Kellerman\",\r\n        lyrics: \"And I’ll break, connive, it's worse\\nThan Pernell Whitaker fuckin' up Chavez\",\r\n        boxer: boxers.get('Julio César Chávez'),\r\n        genre: \"rap\",\r\n        metadata: {\r\n            song: {\r\n                source: \"youtube\",\r\n                id: \"WF0DntqwMKg\",\r\n                start: 107,\r\n                end: 112,\r\n            },\r\n            genius: \"https://genius.com/16338821\",\r\n        }\r\n    }\r\n]\r\n\r\n","import './App.css';\nimport Search from \"./components/search\";\nimport {data} from \"./data\";\n\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Search songs={data}/>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}