{"version":3,"sources":["components/youtube.tsx","components/stats.tsx","components/search.tsx","boxers.tsx","data.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Youtube","props","useState","play","show","setPlay","ytPlayerState","setYtPlayerState","setTimeout","opts","playerVars","autoplay","end","start","ytStates","YouTube","PlayerState","Button","variant","color","onClick","PLAYING","UNSTARTED","ENDED","PAUSED","CUED","BUFFERING","Box","component","display","videoId","source","id","onStateChange","e","data","Stats","popularYears","results","songs","map","i","year","reduce","prev","curr","Object","entries","sort","a","b","popularBoxers","boxer","name","Lyrics","styled","div","GithubLink","span","TwitterLink","Search","locationPathName","locationPathNameSplit","split","length","getLocationSearch","useLocation","pathname","locationSearchValue","locationSearchType","history","useHistory","searchResults","setSearchResults","search","setSearch","searchType","setSearchType","useEffect","value","includes","songParam","val","songParamWithNoAccents","normalize","replace","toLowerCase","filter","song","artist","singer","lyrics","parseInt","SearchSongs","document","title","getBoxRecLink","getBoxStatLink","className","noValidate","autoComplete","mr","TextField","label","spellCheck","onChange","push","target","FormControl","InputLabel","Select","native","Link","rel","href","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","metadata","genius","boxrecId","boxstatId","boxers","Map","set","get","genre","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.019e3b56.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport YouTube, { Options } from 'react-youtube';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\n\nfunction Youtube(props: {\n  id: string;\n  source: string;\n  start: number;\n  end: number;\n}) {\n  const [play, setPlay] = useState({ play: false, show: false });\n  const [ytPlayerState, setYtPlayerState] = useState<number>(-1);\n  const setToPlay = () => setPlay({ play: true, show: false });\n  // clicking play sets `show` to false, which then\n  // sets a timeout to set it again to true\n  // it unrenders and rerenders the iframe element\n  if (play.play && !play.show) {\n    setTimeout(() => setPlay({ play: true, show: true }), 0);\n  }\n\n  const opts = {\n    playerVars: {\n      autoplay: 1,\n      end: props.end,\n      start: props.start,\n    },\n  } as Options;\n\n  function stateChange(e: { target: any; data: number }) {\n    setYtPlayerState(e.data);\n  }\n\n  const ytStates = YouTube.PlayerState;\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={setToPlay}>\n        {ytPlayerState === ytStates.PLAYING && <Pause />}\n        {(ytPlayerState === ytStates.UNSTARTED ||\n          ytPlayerState === ytStates.ENDED ||\n          ytPlayerState === ytStates.PAUSED) && <PlayArrow />}\n        {(ytPlayerState === ytStates.CUED ||\n          ytPlayerState === ytStates.BUFFERING) && <span>LOADING</span>}\n      </Button>\n\n      {play.play && play.show && (\n        <Box component=\"div\" display=\"none\">\n          <YouTube\n            videoId={props.source}\n            id={props.id}\n            opts={opts}\n            onStateChange={stateChange}\n          />\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default Youtube;\n","/*eslint no-sequences: 0*/\n\nimport { song } from '../data';\n\nfunction Stats(props: { songs: song[] }) {\n  const popularYears = (): any[] => {\n    const results = props.songs\n      .map((i) => i.year)\n      .reduce(\n        (prev: any, curr: any) => ((prev[curr] = ++prev[curr] || 1), prev),\n        {}\n      );\n\n    return Object.entries(results).sort(\n      (a: [string, any], b: [string, any]) => {\n        if (a[1] < b[1]) {\n          return 1;\n        }\n\n        if (a[1] > b[1]) {\n          return -1;\n        }\n\n        return 0;\n      }\n    );\n  };\n\n  const popularBoxers = (): any[] => {\n    const results = props.songs\n      .map((i) => i.boxer?.name)\n      // eslint-disable-next-line no-sequences\n      .reduce(\n        (prev: any, curr: any) => ((prev[curr] = ++prev[curr] || 1), prev),\n        {}\n      );\n\n    return Object.entries(results).sort(\n      (a: [string, any], b: [string, any]) => {\n        if (a[1] < b[1]) {\n          return 1;\n        }\n\n        if (a[1] > b[1]) {\n          return -1;\n        }\n\n        return 0;\n      }\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        Top referenced years: {popularYears()[0][0]}, {popularYears()[1][0]},{' '}\n        {popularYears()[2][0]}\n      </div>\n      <div>\n        Top referenced boxers: {popularBoxers()[0][0]}, {popularBoxers()[1][0]},{' '}\n        {popularBoxers()[2][0]}\n      </div>\n    </div>\n  );\n}\n\nexport default Stats;\n","import {\n  Box,\n  FormControl,\n  InputLabel,\n  Link,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport Youtube from './youtube';\nimport { song } from '../data';\nimport styled from 'styled-components';\nimport GitHub from '@material-ui/icons/GitHub';\nimport Twitter from '@material-ui/icons/Twitter';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Stats from './stats';\n\nconst Lyrics = styled.div`\n  white-space: pre-wrap;\n  font-style: italic;\n\n  &::before,\n  &&::after {\n    content: '\"';\n  }\n`;\n\nconst GithubLink = styled.span`\n  position: relative;\n  margin: 0 10px;\n  top: 10px;\n  svg {\n    color: black;\n  }\n`;\n\nconst TwitterLink = styled.span`\n  position: relative;\n  margin: 0 10px;\n  top: 10px;\n  svg {\n    color: rgba(29, 161, 242, 1);\n  }\n`;\n\ntype SearchType = 'all' | 'artist' | 'song' | 'lyrics' | 'boxer';\n\nfunction SearchSongs(\n  songs: song[],\n  value: string,\n  searchType: SearchType\n): song[] {\n  if (value === '') {\n    return songs;\n  }\n\n  const includes = (songParam: string = '', val: string): boolean => {\n    // takes the song value and removes all accents for additional searching\n    const songParamWithNoAccents = songParam\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '');\n    return (\n      songParam.toLowerCase().includes(val) ||\n      songParamWithNoAccents.toLowerCase().includes(val)\n    );\n  };\n\n  return songs.filter((song) => {\n    const val: string = value.toLowerCase();\n\n    if (\n      (searchType === 'artist' &&\n        (includes(song.artist, val) || includes(song.singer, val))) ||\n      (searchType === 'song' && includes(song.song, val)) ||\n      (searchType === 'lyrics' && includes(song.lyrics, val)) ||\n      (searchType === 'boxer' && includes(song.boxer?.name, val))\n    ) {\n      return true;\n    } else if (searchType === 'all') {\n      if (includes(song.boxer?.name, val)) {\n        return true;\n      }\n\n      if (includes(song.artist, val) || includes(song.singer, val)) {\n        return true;\n      }\n\n      if (song.year === parseInt(val)) {\n        return true;\n      }\n\n      if (includes(song.song, val)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n\nfunction getLocationSearch(locationPathName: string): string[] {\n  const locationPathNameSplit = locationPathName.split('/');\n\n  if (locationPathNameSplit.length === 3) {\n    // basic search without type\n    return [locationPathNameSplit[locationPathNameSplit.length - 1], 'all'];\n  } else if (locationPathNameSplit.length === 4) {\n    // search with type\n    return [\n      locationPathNameSplit[locationPathNameSplit.length - 2],\n      locationPathNameSplit[locationPathNameSplit.length - 1] ?? 'all',\n    ];\n  }\n\n  return [];\n}\n\nfunction Search(props: { songs: song[] }) {\n  const location = useLocation();\n  const [locationSearchValue, locationSearchType] = getLocationSearch(\n    location.pathname\n  );\n  const history = useHistory();\n\n  const [searchResults, setSearchResults] = useState<song[]>([]);\n  const [search, setSearch] = useState<string>('');\n  const [searchType, setSearchType] = useState<SearchType>('all');\n\n  if (locationSearchValue && search !== locationSearchValue) {\n    setSearch(locationSearchValue);\n  }\n\n  const inputChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    history.push(`/boxing-references/${e.target.value}/${locationSearchType}`);\n    setSearch(e.target.value);\n  };\n\n  const handleChange = (\n    e: ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    history.push(`/boxing-references/${locationSearchValue}/${e.target.value}`);\n    setSearchType(e.target.value as SearchType);\n  };\n\n  useEffect(() => {\n    setSearchResults(SearchSongs(props.songs, search, searchType));\n  }, [search, searchType, props.songs]);\n\n  useEffect(() => {\n    if (search === '') {\n      document.title = `Boxing references in media`;\n    } else {\n      document.title = `Boxing references for \"${search}\"`;\n    }\n  }, [search]);\n\n  const getBoxRecLink = (id: string = '0') =>\n    `https://boxrec.com/en/proboxer/${id}`;\n  const getBoxStatLink = (id: string = '0') => `https://boxstat.co/boxer/${id}`;\n\n  return (\n    <div className=\"search\">\n      <form noValidate autoComplete=\"off\">\n        <Box mr={1} display=\"inline\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"Search\"\n            spellCheck=\"false\"\n            value={search}\n            onChange={inputChange}\n          />\n        </Box>\n        <Box display=\"inline\">\n          <FormControl>\n            <InputLabel>Type</InputLabel>\n            <Select native onChange={handleChange}>\n              <option value=\"all\">All</option>\n              <option value=\"artist\">Artist/Singer/Rapper</option>\n              <option value=\"song\">Song</option>\n              <option value=\"year\">Year</option>\n              <option value=\"lyrics\">Lyrics</option>\n              <option value=\"boxer\">Boxer</option>\n            </Select>\n          </FormControl>\n\n          <GithubLink>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://github.com/boxing/boxing-references\"\n            >\n              <GitHub />\n            </Link>\n          </GithubLink>\n\n          <TwitterLink>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://twitter.com/Mike_DiDomizio\"\n            >\n              <Twitter />\n            </Link>\n          </TwitterLink>\n        </Box>\n      </form>\n\n      <div>\n        {searchResults.length} result\n        {searchResults.length !== 1 && <span>s</span>}\n      </div>\n\n      <Stats songs={props.songs} />\n\n      {searchResults.length > 0 && (\n        <TableContainer>\n          <Table aria-label=\"Boxing references\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Artist</TableCell>\n                <TableCell>Song</TableCell>\n                <TableCell>Singer/Rapper</TableCell>\n                <TableCell>Year</TableCell>\n                <TableCell>Boxer</TableCell>\n                <TableCell>Links</TableCell>\n                <TableCell>Lyrics</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {searchResults.map((song, i) => (\n                <TableRow key={i}>\n                  <TableCell>{song.artist}</TableCell>\n                  <TableCell>\n                    <Link target=\"_blank\" href={song.metadata.genius}>\n                      {song.song}\n                    </Link>\n                  </TableCell>\n                  <TableCell>{song.singer}</TableCell>\n                  <TableCell>{song.year}</TableCell>\n                  <TableCell>\n                    {song.boxer?.name}\n                    &nbsp;-{' '}\n                    <Link\n                      target=\"_blank\"\n                      href={getBoxRecLink(song.boxer?.boxrecId)}\n                    >\n                      BoxRec\n                    </Link>\n                    /\n                    <Link\n                      target=\"_blank\"\n                      href={getBoxStatLink(song.boxer?.boxstatId)}\n                    >\n                      BoxStat\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Lyrics>{song.lyrics}</Lyrics>\n                  </TableCell>\n                  <TableCell>\n                    <Youtube\n                      id={song.metadata.song.id}\n                      source={song.metadata.song.id}\n                      start={song.metadata.song.start}\n                      end={song.metadata.song.end}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </div>\n  );\n}\n\nexport default Search;\n","export interface Boxer {\n  name: string;\n  boxrecId: string;\n  boxstatId: string;\n}\n\nexport const boxers = new Map<string, Boxer>();\n\nboxers.set('Sonny Liston', {\n  name: 'Sonny Liston',\n  boxrecId: '9031',\n  boxstatId: '69408-sonny-liston',\n});\n\nboxers.set('Mike Tyson', {\n  name: 'Mike Tyson',\n  boxrecId: '474',\n  boxstatId: '18274-mike-tyson',\n});\n\nboxers.set('Pernell Whitaker', {\n  name: 'Pernell Whitaker',\n  boxrecId: '555',\n  boxstatId: '69652-pernell-whitaker',\n});\n\nboxers.set('Julio César Chávez', {\n  name: 'Julio César Chávez',\n  boxrecId: '8119',\n  boxstatId: '13727-julio-cesar-chavez',\n});\n\nboxers.set('Roberto Duran', {\n  name: 'Roberto Duran',\n  boxrecId: '80',\n  boxstatId: '11759-roberto-duran',\n});\n","import { Boxer, boxers } from './boxers';\n\nexport interface song {\n  song: string;\n  year: number;\n  artist: string;\n  singer: string;\n  lyrics: string;\n  boxer: Boxer | undefined;\n  genre: Genre;\n  metadata: {\n    song: youtubeVideo;\n    genius: string;\n  };\n}\n\nexport interface youtubeVideo {\n  source: 'youtube';\n  id: string;\n  start: number;\n  end: number;\n}\n\ntype Genre = 'rap';\n\nexport const data: song[] = [\n  {\n    song: 'Surf Swag',\n    year: 2009,\n    singer: 'Lil Wayne',\n    artist: 'Lil Wayne',\n    lyrics:\n      'Weezy beat the beat up like Sonny Liston\\nRedbone do me good then her friend assist her',\n    boxer: boxers.get('Sonny Liston'),\n    genre: 'rap',\n    metadata: {\n      song: {\n        source: 'youtube',\n        id: 'eRRKlXbIqHY',\n        start: 187,\n        end: 194,\n      },\n      genius: 'https://genius.com/13380',\n    },\n  },\n  {\n    song: 'Bitch Please',\n    year: 1999,\n    artist: 'Snoop Dogg',\n    singer: 'Xzibit',\n    lyrics:\n      'Xzibit ready to Scrap like Mike Tyson with his license back\\n9 to 5 minimum wage? What type of life is that?',\n    boxer: boxers.get('Mike Tyson'),\n    genre: 'rap',\n    metadata: {\n      song: {\n        source: 'youtube',\n        id: 'y6_cpFMRVQM',\n        start: 42,\n        end: 50,\n      },\n      genius: 'https://genius.com/21430388',\n    },\n  },\n  {\n    song: 'Young Man Rumble',\n    year: 1994,\n    artist: 'Max and Sam',\n    singer: 'Max Kellerman',\n    lyrics:\n      'Got skills, got stamina\\nGot hands of stone like the champ from Panama',\n    boxer: boxers.get('Roberto Duran'),\n    genre: 'rap',\n    metadata: {\n      song: {\n        source: 'youtube',\n        id: 'WF0DntqwMKg',\n        start: 77,\n        end: 82,\n      },\n      genius: 'https://genius.com/16338821',\n    },\n  },\n  {\n    song: 'Young Man Rumble',\n    year: 1994,\n    artist: 'Max and Sam',\n    singer: 'Max Kellerman',\n    lyrics:\n      \"New York, New York, so nice, got named twice, and...\\nI'm harassing' punks like Mike Tyson\",\n    boxer: boxers.get('Mike Tyson'),\n    genre: 'rap',\n    metadata: {\n      song: {\n        source: 'youtube',\n        id: 'WF0DntqwMKg',\n        start: 102,\n        end: 107,\n      },\n      genius: 'https://genius.com/Max-and-sam-young-man-rumble-lyrics',\n    },\n  },\n  {\n    song: 'Young Man Rumble',\n    year: 1994,\n    artist: 'Max and Sam',\n    singer: 'Max Kellerman',\n    lyrics:\n      \"And I’ll break, connive, it's worse\\nThan Pernell Whitaker fuckin' up Chavez\",\n    boxer: boxers.get('Pernell Whitaker'),\n    genre: 'rap',\n    metadata: {\n      song: {\n        source: 'youtube',\n        id: 'WF0DntqwMKg',\n        start: 107,\n        end: 112,\n      },\n      genius: 'https://genius.com/16338821',\n    },\n  },\n  {\n    song: 'Young Man Rumble',\n    year: 1994,\n    artist: 'Max and Sam',\n    singer: 'Max Kellerman',\n    lyrics:\n      \"And I’ll break, connive, it's worse\\nThan Pernell Whitaker fuckin' up Chavez\",\n    boxer: boxers.get('Julio César Chávez'),\n    genre: 'rap',\n    metadata: {\n      song: {\n        source: 'youtube',\n        id: 'WF0DntqwMKg',\n        start: 107,\n        end: 112,\n      },\n      genius: 'https://genius.com/16338821',\n    },\n  },\n];\n","import './App.css';\nimport Search from './components/search';\nimport { data } from './data';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Search songs={data} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}